// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  email        String         @unique
  username     String         @unique
  profilePic   String
  isAdmin      Boolean        @default(false)
  clerkUserId  String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Property     Property[]
  Query        Query[]
  Subscription Subscription[]
}

model Property {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  name        String
  description String
  type        String
  status      String
  price       Float

  city     String
  picode   String
  landmark String
  address  String

  bedrooms   Int
  bathrooms  Int
  belconies  Int
  floors     Int
  area       Float
  age        Int
  parking    String
  furnishing String
  facing     String
  images     String[]

  ownerName        String
  ownerNumber      String
  ownerEmail       String
  showOwnerContact Boolean
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  Query            Query[]
}

model Query {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  propertyId String   @db.ObjectId
  property   Property @relation(fields: [propertyId], references: [id])

  name        String
  quoteAmount String
  email       String
  message     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Subscription {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  plan      Json
  paymentId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
